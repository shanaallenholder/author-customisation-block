"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.margin = margin;
exports.padding = padding;
Object.defineProperty(exports, "space", {
  enumerable: true,
  get: function get() {
    return _space.space;
  }
});

var _space = require("../mixins/space");

var _styleSystem = require("../style-system");

/**
 * @param {number} value
 */
function margin(value) {
  return (0, _styleSystem.css)({
    margin: (0, _space.space)(value)
  });
}

margin.x = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    marginLeft: (0, _space.space)(v),
    marginRight: (0, _space.space)(v)
  });
};

margin.y = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    marginBottom: (0, _space.space)(v),
    marginTop: (0, _space.space)(v)
  });
};

margin.top = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    marginTop: (0, _space.space)(v)
  });
};

margin.bottom = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    marginBottom: (0, _space.space)(v)
  });
};

margin.left = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    marginLeft: (0, _space.space)(v)
  });
};

margin.right = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    marginRight: (0, _space.space)(v)
  });
};
/**
 * @param {number} value
 */


function padding(value) {
  return (0, _styleSystem.css)({
    padding: (0, _space.space)(value)
  });
}

padding.x = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    paddingLeft: (0, _space.space)(v),
    paddingRight: (0, _space.space)(v)
  });
};

padding.y = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    paddingBottom: (0, _space.space)(v),
    paddingTop: (0, _space.space)(v)
  });
};

padding.top = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    paddingTop: (0, _space.space)(v)
  });
};

padding.bottom = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    paddingBottom: (0, _space.space)(v)
  });
};

padding.left = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    paddingLeft: (0, _space.space)(v)
  });
};

padding.right = function (
/** @type {number} */
v) {
  return (0, _styleSystem.css)({
    paddingRight: (0, _space.space)(v)
  });
};