{"version":3,"sources":["@wordpress/components/src/focusable-iframe/index.js"],"names":["FocusableIframe","iframeRef","onFocus","props","fallbackRef","ref","iframe","current","ownerDocument","defaultView","FocusEvent","checkFocus","activeElement","focusEvent","bubbles","dispatchEvent","addEventListener","removeEventListener"],"mappings":";;;;;;;;;AAGA;;;;;;AAHA;AACA;AACA;AAGe,SAASA,eAAT,OAA6D;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAVC,KAAU;AAC3E,MAAMC,WAAW,GAAG,sBAApB;AACA,MAAMC,GAAG,GAAGJ,SAAS,IAAIG,WAAzB;AAEA,0BAAW,YAAM;AAChB,QAAME,MAAM,GAAGD,GAAG,CAACE,OAAnB;AADgB,QAERC,aAFQ,GAEUF,MAFV,CAERE,aAFQ;AAAA,QAGRC,WAHQ,GAGQD,aAHR,CAGRC,WAHQ;AAAA,QAIRC,UAJQ,GAIOD,WAJP,CAIRC,UAJQ;AAMhB;AACF;AACA;AACA;;AACE,aAASC,UAAT,GAAsB;AACrB,UAAKH,aAAa,CAACI,aAAd,KAAgCN,MAArC,EAA8C;AAC7C;AACA;;AAED,UAAMO,UAAU,GAAG,IAAIH,UAAJ,CAAgB,OAAhB,EAAyB;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAzB,CAAnB;AAEAR,MAAAA,MAAM,CAACS,aAAP,CAAsBF,UAAtB;;AAEA,UAAKX,OAAL,EAAe;AACdA,QAAAA,OAAO,CAAEW,UAAF,CAAP;AACA;AACD;;AAEDJ,IAAAA,WAAW,CAACO,gBAAZ,CAA8B,MAA9B,EAAsCL,UAAtC;AAEA,WAAO,YAAM;AACZF,MAAAA,WAAW,CAACQ,mBAAZ,CAAiC,MAAjC,EAAyCN,UAAzC;AACA,KAFD;AAGA,GA7BD,EA6BG,CAAET,OAAF,CA7BH,EAJ2E,CAmC3E;AACA;AACA;AACA;;AACA,SAAO;AAAQ,IAAA,GAAG,EAAGG;AAAd,KAAyBF,KAAzB,EAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect, useRef } from '@wordpress/element';\n\nexport default function FocusableIframe( { iframeRef, onFocus, ...props } ) {\n\tconst fallbackRef = useRef();\n\tconst ref = iframeRef || fallbackRef;\n\n\tuseEffect( () => {\n\t\tconst iframe = ref.current;\n\t\tconst { ownerDocument } = iframe;\n\t\tconst { defaultView } = ownerDocument;\n\t\tconst { FocusEvent } = defaultView;\n\n\t\t/**\n\t\t * Checks whether the iframe is the activeElement, inferring that it has\n\t\t * then received focus, and calls the `onFocus` prop callback.\n\t\t */\n\t\tfunction checkFocus() {\n\t\t\tif ( ownerDocument.activeElement !== iframe ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst focusEvent = new FocusEvent( 'focus', { bubbles: true } );\n\n\t\t\tiframe.dispatchEvent( focusEvent );\n\n\t\t\tif ( onFocus ) {\n\t\t\t\tonFocus( focusEvent );\n\t\t\t}\n\t\t}\n\n\t\tdefaultView.addEventListener( 'blur', checkFocus );\n\n\t\treturn () => {\n\t\t\tdefaultView.removeEventListener( 'blur', checkFocus );\n\t\t};\n\t}, [ onFocus ] );\n\n\t// Disable reason: The rendered iframe is a pass-through component,\n\t// assigning props inherited from the rendering parent. It's the\n\t// responsibility of the parent to assign a title.\n\t// eslint-disable-next-line jsx-a11y/iframe-has-title\n\treturn <iframe ref={ ref } { ...props } />;\n}\n"]}