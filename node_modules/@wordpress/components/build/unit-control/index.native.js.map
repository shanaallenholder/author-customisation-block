{"version":3,"sources":["@wordpress/components/src/unit-control/index.native.js"],"names":["UnitControl","currentInput","label","value","onChange","onUnitChange","initialPosition","min","max","separatorType","units","CSS_UNITS","unit","getStylesFromColorScheme","decimalNum","props","pickerRef","anchorNodeRef","onPickerPresent","current","presentPicker","currentInputValue","initialControlValue","isFinite","unitButtonTextStyle","styles","unitButtonText","unitButtonTextDark","renderUnitButton","accessibilityHint","Platform","OS","accessibilityLabel","unitButton","getAnchor","undefined","renderUnitPicker","unitMenu"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tText,\n\tView,\n\tTouchableWithoutFeedback,\n\tPlatform,\n\tfindNodeHandle,\n} from 'react-native';\n\n/**\n * Internal dependencies\n */\nimport RangeCell from '../mobile/bottom-sheet/range-cell';\nimport StepperCell from '../mobile/bottom-sheet/stepper-cell';\nimport Picker from '../mobile/picker';\nimport styles from './style.scss';\nimport { CSS_UNITS } from './utils';\n/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { withPreferredColorScheme } from '@wordpress/compose';\nimport { __, sprintf } from '@wordpress/i18n';\n\nfunction UnitControl( {\n\tcurrentInput,\n\tlabel,\n\tvalue,\n\tonChange,\n\tonUnitChange,\n\tinitialPosition,\n\tmin,\n\tmax,\n\tseparatorType,\n\tunits = CSS_UNITS,\n\tunit,\n\tgetStylesFromColorScheme,\n\tdecimalNum,\n\t...props\n} ) {\n\tconst pickerRef = useRef();\n\tconst anchorNodeRef = useRef();\n\n\tfunction onPickerPresent() {\n\t\tif ( pickerRef?.current ) {\n\t\t\tpickerRef.current.presentPicker();\n\t\t}\n\t}\n\n\tconst currentInputValue = currentInput === null ? value : currentInput;\n\tconst initialControlValue = isFinite( currentInputValue )\n\t\t? currentInputValue\n\t\t: initialPosition;\n\n\tconst unitButtonTextStyle = getStylesFromColorScheme(\n\t\tstyles.unitButtonText,\n\t\tstyles.unitButtonTextDark\n\t);\n\n\tconst renderUnitButton = () => {\n\t\tconst accessibilityHint =\n\t\t\tPlatform.OS === 'ios'\n\t\t\t\t? __( 'Double tap to open Action Sheet with available options' )\n\t\t\t\t: __(\n\t\t\t\t\t\t'Double tap to open Bottom Sheet with available options'\n\t\t\t\t  );\n\n\t\t/* translators: accessibility text. Inform about current unit value. %s: Current unit value. */\n\t\tconst accessibilityLabel = sprintf( __( 'Current unit is %s' ), unit );\n\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback\n\t\t\t\tonPress={ onPickerPresent }\n\t\t\t\taccessibilityLabel={ accessibilityLabel }\n\t\t\t\taccessibilityRole=\"button\"\n\t\t\t\taccessibilityHint={ accessibilityHint }\n\t\t\t>\n\t\t\t\t<View style={ styles.unitButton }>\n\t\t\t\t\t<Text style={ unitButtonTextStyle }>{ unit }</Text>\n\t\t\t\t</View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t);\n\t};\n\n\tconst getAnchor = () =>\n\t\tanchorNodeRef?.current\n\t\t\t? findNodeHandle( anchorNodeRef?.current )\n\t\t\t: undefined;\n\n\tconst renderUnitPicker = () => {\n\t\treturn (\n\t\t\t<View style={ styles.unitMenu } ref={ anchorNodeRef }>\n\t\t\t\t{ renderUnitButton() }\n\t\t\t\t<Picker\n\t\t\t\t\tref={ pickerRef }\n\t\t\t\t\toptions={ units }\n\t\t\t\t\tonChange={ onUnitChange }\n\t\t\t\t\thideCancelButton\n\t\t\t\t\tleftAlign\n\t\t\t\t\tgetAnchor={ getAnchor }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{ unit !== '%' ? (\n\t\t\t\t<StepperCell\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tmax={ max }\n\t\t\t\t\tmin={ min }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\tseparatorType={ separatorType }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tdefaultValue={ initialControlValue }\n\t\t\t\t\tshouldDisplayTextInput\n\t\t\t\t\tdecimalNum={ unit === 'px' ? 0 : decimalNum }\n\t\t\t\t\t{ ...props }\n\t\t\t\t>\n\t\t\t\t\t{ renderUnitPicker() }\n\t\t\t\t</StepperCell>\n\t\t\t) : (\n\t\t\t\t<RangeCell\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\tminimumValue={ min }\n\t\t\t\t\tmaximumValue={ max }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tdefaultValue={ initialControlValue }\n\t\t\t\t\tseparatorType={ separatorType }\n\t\t\t\t\tdecimalNum={ decimalNum }\n\t\t\t\t\t{ ...props }\n\t\t\t\t>\n\t\t\t\t\t{ renderUnitPicker() }\n\t\t\t\t</RangeCell>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default withPreferredColorScheme( UnitControl );\n"]}