{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/range-cell.native.js"],"names":["Platform","AccessibilityInfo","findNodeHandle","View","Slider","_x","__","sprintf","Component","withPreferredColorScheme","Cell","styles","RangeTextInput","toFixed","isIOS","OS","BottomSheetRangeCell","props","onChangeValue","bind","onChange","onCellPress","value","defaultValue","minimumValue","initialValue","Number","state","accessible","inputValue","sliderValue","decimalNum","setState","announceCurrentValue","sliderRef","reactTag","setAccessibilityFocus","announcement","announceForAccessibility","nextValue","onComplete","maximumValue","disabled","step","preferredColorScheme","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","preview","cellContainerStyle","shouldDisplayTextInput","children","cellProps","accessibilityLabel","label","containerStyle","container","containerIOS","containerAndroid","cellContainerStyles","valueStyle","slider","sliderIOS","sliderAndroid"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tPlatform,\n\tAccessibilityInfo,\n\tfindNodeHandle,\n\tView,\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\n\n/**\n * WordPress dependencies\n */\nimport { _x, __, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withPreferredColorScheme } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport Cell from './cell';\nimport styles from './range-cell.scss';\nimport RangeTextInput from './range-text-input';\nimport { toFixed } from '../utils';\n\nconst isIOS = Platform.OS === 'ios';\n\nclass BottomSheetRangeCell extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.onChangeValue = this.onChangeValue.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.onCellPress = this.onCellPress.bind( this );\n\n\t\tconst { value, defaultValue, minimumValue } = props;\n\t\tconst initialValue = Number( value || defaultValue || minimumValue );\n\n\t\tthis.state = {\n\t\t\taccessible: true,\n\t\t\tinputValue: initialValue,\n\t\t\tsliderValue: initialValue,\n\t\t};\n\t}\n\n\tonChangeValue( initialValue ) {\n\t\tconst { decimalNum, onChange } = this.props;\n\t\tinitialValue = toFixed( initialValue, decimalNum );\n\t\tthis.setState( { inputValue: initialValue } );\n\t\tthis.announceCurrentValue( `${ initialValue }` );\n\t\tonChange( initialValue );\n\t}\n\n\tonCellPress() {\n\t\tthis.setState( { accessible: false } );\n\t\tif ( this.sliderRef ) {\n\t\t\tconst reactTag = findNodeHandle( this.sliderRef );\n\t\t\tAccessibilityInfo.setAccessibilityFocus( reactTag );\n\t\t}\n\t}\n\n\tannounceCurrentValue( value ) {\n\t\t/* translators: %s: current cell value. */\n\t\tconst announcement = sprintf( __( 'Current value is %s' ), value );\n\t\tAccessibilityInfo.announceForAccessibility( announcement );\n\t}\n\n\tonChange( nextValue ) {\n\t\tconst { onChange, onComplete } = this.props;\n\t\tthis.setState( {\n\t\t\tsliderValue: nextValue,\n\t\t} );\n\t\tonChange( nextValue );\n\t\tif ( onComplete ) {\n\t\t\tonComplete( nextValue );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tminimumValue = 0,\n\t\t\tmaximumValue = 10,\n\t\t\tdisabled,\n\t\t\tstep = 1,\n\t\t\tpreferredColorScheme,\n\t\t\tminimumTrackTintColor = preferredColorScheme === 'light'\n\t\t\t\t? '#00669b'\n\t\t\t\t: '#5198d9',\n\t\t\tmaximumTrackTintColor = isIOS ? '#e9eff3' : '#909090',\n\t\t\tthumbTintColor = ! isIOS && '#00669b',\n\t\t\tpreview,\n\t\t\tcellContainerStyle,\n\t\t\tonComplete,\n\t\t\tshouldDisplayTextInput = true,\n\t\t\tchildren,\n\t\t\tdecimalNum,\n\t\t\t...cellProps\n\t\t} = this.props;\n\n\t\tconst { accessible, inputValue, sliderValue } = this.state;\n\n\t\tconst accessibilityLabel = sprintf(\n\t\t\t/* translators: accessibility text. Inform about current value. %1$s: Control label %2$s: Current value. */\n\t\t\t_x(\n\t\t\t\t'%1$s. Current value is %2$s',\n\t\t\t\t'Slider for picking a number inside a range'\n\t\t\t),\n\t\t\tcellProps.label,\n\t\t\tvalue\n\t\t);\n\n\t\tconst containerStyle = [\n\t\t\tstyles.container,\n\t\t\tisIOS ? styles.containerIOS : styles.containerAndroid,\n\t\t];\n\n\t\treturn (\n\t\t\t<Cell\n\t\t\t\t{ ...cellProps }\n\t\t\t\tcellContainerStyle={ [\n\t\t\t\t\tstyles.cellContainerStyles,\n\t\t\t\t\tcellContainerStyle,\n\t\t\t\t] }\n\t\t\t\tcellRowContainerStyle={ containerStyle }\n\t\t\t\taccessibilityRole={ 'none' }\n\t\t\t\tvalue={ '' }\n\t\t\t\teditable={ false }\n\t\t\t\tactiveOpacity={ 1 }\n\t\t\t\taccessible={ accessible }\n\t\t\t\tonPress={ this.onCellPress }\n\t\t\t\tvalueStyle={ styles.valueStyle }\n\t\t\t\taccessibilityLabel={ accessibilityLabel }\n\t\t\t\taccessibilityHint={\n\t\t\t\t\t/* translators: accessibility text (hint for focusing a slider) */\n\t\t\t\t\t__( 'Double tap to change the value using slider' )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<View style={ containerStyle }>\n\t\t\t\t\t{ preview }\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tvalue={ sliderValue }\n\t\t\t\t\t\tdefaultValue={ defaultValue }\n\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t\tstep={ step }\n\t\t\t\t\t\tminimumValue={ minimumValue }\n\t\t\t\t\t\tmaximumValue={ maximumValue }\n\t\t\t\t\t\tminimumTrackTintColor={ minimumTrackTintColor }\n\t\t\t\t\t\tmaximumTrackTintColor={ maximumTrackTintColor }\n\t\t\t\t\t\tthumbTintColor={ thumbTintColor }\n\t\t\t\t\t\tonValueChange={ this.onChangeValue }\n\t\t\t\t\t\tonSlidingComplete={ onComplete }\n\t\t\t\t\t\tref={ ( slider ) => {\n\t\t\t\t\t\t\tthis.sliderRef = slider;\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\tisIOS ? styles.sliderIOS : styles.sliderAndroid\n\t\t\t\t\t\t}\n\t\t\t\t\t\taccessibilityRole={ 'adjustable' }\n\t\t\t\t\t/>\n\t\t\t\t\t{ shouldDisplayTextInput && (\n\t\t\t\t\t\t<RangeTextInput\n\t\t\t\t\t\t\tlabel={ cellProps.label }\n\t\t\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\t\t\tdefaultValue={ `${ inputValue }` }\n\t\t\t\t\t\t\tvalue={ inputValue }\n\t\t\t\t\t\t\tmin={ minimumValue }\n\t\t\t\t\t\t\tmax={ maximumValue }\n\t\t\t\t\t\t\tstep={ step }\n\t\t\t\t\t\t\tdecimalNum={ decimalNum }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ children }\n\t\t\t\t\t\t</RangeTextInput>\n\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t</Cell>\n\t\t);\n\t}\n}\n\nexport default withPreferredColorScheme( BottomSheetRangeCell );\n"]}