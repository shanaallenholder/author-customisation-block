/**
 * External dependencies
 */
import type { ForwardedRef } from 'react';
import type { WordPressComponentProps } from '../context/wordpress-component';
import type { ToggleControlProps } from './types';
/**
 * ToggleControl is used to generate a toggle user interface.
 *
 * ```jsx
 * import { ToggleControl } from '@wordpress/components';
 * import { useState } from '@wordpress/element';
 *
 * const MyToggleControl = () => {
 *   const [ value, setValue ] = useState( false );
 *
 *   return (
 *     <ToggleControl
 *       label="Fixed Background"
 *       checked={ value }
 *       onChange={ () => setValue( ( state ) => ! state ) }
 *     />
 *   );
 * };
 * ```
 */
export declare function ToggleControl({ __nextHasNoMarginBottom, label, checked, help, className, onChange, disabled, }: WordPressComponentProps<ToggleControlProps, 'input', false>, ref: ForwardedRef<HTMLInputElement>): import("react").JSX.Element;
declare const _default: import("react").ForwardRefExoticComponent<Pick<import("../form-toggle/types").FormToggleProps, "disabled" | "checked"> & Pick<import("../base-control/types").BaseControlProps, "className" | "__nextHasNoMarginBottom"> & {
    help?: import("react").ReactNode | ((checked: boolean) => import("react").ReactNode);
    label: import("react").ReactNode;
    onChange: (value: boolean) => void;
} & Omit<Omit<import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref">, "className" | "children" | "help" | "onChange" | "label" | "as" | "disabled" | "checked" | "__nextHasNoMarginBottom"> & import("react").RefAttributes<HTMLInputElement>>;
export default _default;
//# sourceMappingURL=index.d.ts.map