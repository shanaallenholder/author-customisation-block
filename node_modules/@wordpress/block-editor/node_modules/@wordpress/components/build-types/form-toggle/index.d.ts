import type { ForwardedRef } from 'react';
/**
 * Internal dependencies
 */
import type { FormToggleProps } from './types';
import type { WordPressComponentProps } from '../context';
export declare const noop: () => void;
/**
 * FormToggle switches a single setting on or off.
 *
 * ```jsx
 * import { FormToggle } from '@wordpress/components';
 * import { useState } from '@wordpress/element';
 *
 * const MyFormToggle = () => {
 *   const [ isChecked, setChecked ] = useState( true );
 *
 *   return (
 *     <FormToggle
 *       checked={ isChecked }
 *       onChange={ () => setChecked( ( state ) => ! state ) }
 *     />
 *   );
 * };
 * ```
 */
export declare function FormToggle(props: WordPressComponentProps<FormToggleProps, 'input', false>, ref: ForwardedRef<HTMLInputElement>): import("react").JSX.Element;
declare const _default: import("react").ForwardRefExoticComponent<FormToggleProps & Omit<Omit<import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref">, "children" | "as" | keyof FormToggleProps> & import("react").RefAttributes<HTMLInputElement>>;
export default _default;
//# sourceMappingURL=index.d.ts.map