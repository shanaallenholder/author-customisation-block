{"version":3,"names":["__","BaseControl","Flex","FlexItem","RangeControl","__experimentalNumberControl","NumberControl","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOption","ToggleGroupControlOption","__experimentalUnitControl","UnitControl","__experimentalParseQuantityAndUnitFromRawValue","parseQuantityAndUnitFromRawValue","useState","appendSelectors","getBlockGapCSS","getGapCSSValue","shouldSkipSerialization","LAYOUT_DEFINITIONS","GridVisualizer","RANGE_CONTROL_MAX_VALUES","px","vw","vh","em","rem","svw","lvw","dvw","svh","lvh","dvh","vi","svi","lvi","dvi","vb","svb","lvb","dvb","vmin","svmin","lvmin","dvmin","vmax","svmax","lvmax","dvmax","units","value","label","default","name","inspectorControls","GridLayoutInspectorControls","layout","onChange","layoutBlockSupport","allowSizingOnChildren","createElement","Fragment","GridLayoutTypeControl","columnCount","GridLayoutColumnsAndRowsControl","GridLayoutMinimumWidthControl","toolBarControls","GridLayoutToolbarControls","clientId","getLayoutStyle","selector","style","blockName","hasBlockGapSupport","layoutDefinitions","minimumColumnWidth","rowCount","blockGapValue","spacing","blockGap","undefined","output","rules","push","length","join","getOrientation","getAlignments","quantity","unit","handleSliderChange","next","handleUnitChange","newUnit","newValue","includes","toFixed","Math","round","VisualLabel","as","gap","isBlock","size","onUnitChange","min","hideLabelFromVision","max","withInputField","validValue","parseInt","window","__experimentalEnableGridInteractivity","tempColumnCount","setTempColumnCount","tempMinimumColumnWidth","setTempMinimumColumnWidth","isManual","onChangeType","__nextHasNoMarginBottom","key"],"sources":["@wordpress/block-editor/src/layouts/grid.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nimport {\n\tBaseControl,\n\tFlex,\n\tFlexItem,\n\tRangeControl,\n\t__experimentalNumberControl as NumberControl,\n\t__experimentalToggleGroupControl as ToggleGroupControl,\n\t__experimentalToggleGroupControlOption as ToggleGroupControlOption,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalParseQuantityAndUnitFromRawValue as parseQuantityAndUnitFromRawValue,\n} from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { appendSelectors, getBlockGapCSS } from './utils';\nimport { getGapCSSValue } from '../hooks/gap';\nimport { shouldSkipSerialization } from '../hooks/utils';\nimport { LAYOUT_DEFINITIONS } from './definitions';\nimport { GridVisualizer } from '../components/grid-visualizer';\n\nconst RANGE_CONTROL_MAX_VALUES = {\n\tpx: 600,\n\t'%': 100,\n\tvw: 100,\n\tvh: 100,\n\tem: 38,\n\trem: 38,\n\tsvw: 100,\n\tlvw: 100,\n\tdvw: 100,\n\tsvh: 100,\n\tlvh: 100,\n\tdvh: 100,\n\tvi: 100,\n\tsvi: 100,\n\tlvi: 100,\n\tdvi: 100,\n\tvb: 100,\n\tsvb: 100,\n\tlvb: 100,\n\tdvb: 100,\n\tvmin: 100,\n\tsvmin: 100,\n\tlvmin: 100,\n\tdvmin: 100,\n\tvmax: 100,\n\tsvmax: 100,\n\tlvmax: 100,\n\tdvmax: 100,\n};\n\nconst units = [\n\t{ value: 'px', label: 'px', default: 0 },\n\t{ value: 'rem', label: 'rem', default: 0 },\n\t{ value: 'em', label: 'em', default: 0 },\n];\n\nexport default {\n\tname: 'grid',\n\tlabel: __( 'Grid' ),\n\tinspectorControls: function GridLayoutInspectorControls( {\n\t\tlayout = {},\n\t\tonChange,\n\t\tlayoutBlockSupport = {},\n\t} ) {\n\t\tconst { allowSizingOnChildren = false } = layoutBlockSupport;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<GridLayoutTypeControl\n\t\t\t\t\tlayout={ layout }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t/>\n\t\t\t\t{ layout?.columnCount ? (\n\t\t\t\t\t<GridLayoutColumnsAndRowsControl\n\t\t\t\t\t\tlayout={ layout }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\tallowSizingOnChildren={ allowSizingOnChildren }\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<GridLayoutMinimumWidthControl\n\t\t\t\t\t\tlayout={ layout }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</>\n\t\t);\n\t},\n\ttoolBarControls: function GridLayoutToolbarControls( { clientId } ) {\n\t\treturn <GridVisualizer clientId={ clientId } />;\n\t},\n\tgetLayoutStyle: function getLayoutStyle( {\n\t\tselector,\n\t\tlayout,\n\t\tstyle,\n\t\tblockName,\n\t\thasBlockGapSupport,\n\t\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\t} ) {\n\t\tconst {\n\t\t\tminimumColumnWidth = '12rem',\n\t\t\tcolumnCount = null,\n\t\t\trowCount = null,\n\t\t} = layout;\n\n\t\t// If a block's block.json skips serialization for spacing or spacing.blockGap,\n\t\t// don't apply the user-defined value to the styles.\n\t\tconst blockGapValue =\n\t\t\tstyle?.spacing?.blockGap &&\n\t\t\t! shouldSkipSerialization( blockName, 'spacing', 'blockGap' )\n\t\t\t\t? getGapCSSValue( style?.spacing?.blockGap, '0.5em' )\n\t\t\t\t: undefined;\n\n\t\tlet output = '';\n\t\tconst rules = [];\n\n\t\tif ( columnCount ) {\n\t\t\trules.push(\n\t\t\t\t`grid-template-columns: repeat(${ columnCount }, minmax(0, 1fr))`\n\t\t\t);\n\t\t\tif ( rowCount ) {\n\t\t\t\trules.push(\n\t\t\t\t\t`grid-template-rows: repeat(${ rowCount }, minmax(0, 1fr))`\n\t\t\t\t);\n\t\t\t}\n\t\t} else if ( minimumColumnWidth ) {\n\t\t\trules.push(\n\t\t\t\t`grid-template-columns: repeat(auto-fill, minmax(min(${ minimumColumnWidth }, 100%), 1fr))`,\n\t\t\t\t'container-type: inline-size'\n\t\t\t);\n\t\t}\n\n\t\tif ( rules.length ) {\n\t\t\t// Reason to disable: the extra line breaks added by prettier mess with the unit tests.\n\t\t\t// eslint-disable-next-line prettier/prettier\n\t\t\toutput = `${ appendSelectors( selector ) } { ${ rules.join(\n\t\t\t\t'; '\n\t\t\t) }; }`;\n\t\t}\n\n\t\t// Output blockGap styles based on rules contained in layout definitions in theme.json.\n\t\tif ( hasBlockGapSupport && blockGapValue ) {\n\t\t\toutput += getBlockGapCSS(\n\t\t\t\tselector,\n\t\t\t\tlayoutDefinitions,\n\t\t\t\t'grid',\n\t\t\t\tblockGapValue\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t},\n\tgetOrientation() {\n\t\treturn 'horizontal';\n\t},\n\tgetAlignments() {\n\t\treturn [];\n\t},\n};\n\n// Enables setting minimum width of grid items.\nfunction GridLayoutMinimumWidthControl( { layout, onChange } ) {\n\tconst { minimumColumnWidth: value = '12rem' } = layout;\n\tconst [ quantity, unit ] = parseQuantityAndUnitFromRawValue( value );\n\n\tconst handleSliderChange = ( next ) => {\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tminimumColumnWidth: [ next, unit ].join( '' ),\n\t\t} );\n\t};\n\n\t// Mostly copied from HeightControl.\n\tconst handleUnitChange = ( newUnit ) => {\n\t\t// Attempt to smooth over differences between currentUnit and newUnit.\n\t\t// This should slightly improve the experience of switching between unit types.\n\t\tlet newValue;\n\n\t\tif ( [ 'em', 'rem' ].includes( newUnit ) && unit === 'px' ) {\n\t\t\t// Convert pixel value to an approximate of the new unit, assuming a root size of 16px.\n\t\t\tnewValue = ( quantity / 16 ).toFixed( 2 ) + newUnit;\n\t\t} else if ( [ 'em', 'rem' ].includes( unit ) && newUnit === 'px' ) {\n\t\t\t// Convert to pixel value assuming a root size of 16px.\n\t\t\tnewValue = Math.round( quantity * 16 ) + newUnit;\n\t\t}\n\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tminimumColumnWidth: newValue,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t{ __( 'Minimum column width' ) }\n\t\t\t</BaseControl.VisualLabel>\n\t\t\t<Flex gap={ 4 }>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tsize={ '__unstable-large' }\n\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\tminimumColumnWidth: newValue,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonUnitChange={ handleUnitChange }\n\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\tlabel={ __( 'Minimum column width' ) }\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tonChange={ handleSliderChange }\n\t\t\t\t\t\tvalue={ quantity }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\tmax={ RANGE_CONTROL_MAX_VALUES[ unit ] || 600 }\n\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t\tlabel={ __( 'Minimum column width' ) }\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t</Flex>\n\t\t</fieldset>\n\t);\n}\n\n// Enables setting number of grid columns\nfunction GridLayoutColumnsAndRowsControl( {\n\tlayout,\n\tonChange,\n\tallowSizingOnChildren,\n} ) {\n\tconst { columnCount = 3, rowCount } = layout;\n\n\treturn (\n\t\t<>\n\t\t\t<fieldset>\n\t\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t\t{ __( 'Columns' ) }\n\t\t\t\t</BaseControl.VisualLabel>\n\t\t\t\t<Flex gap={ 4 }>\n\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\tsize={ '__unstable-large' }\n\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * If the input is cleared, avoid switching\n\t\t\t\t\t\t\t\t * back to \"Auto\" by setting a value of \"1\".\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tconst validValue = value !== '' ? value : '1';\n\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\tcolumnCount: validValue,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tvalue={ columnCount }\n\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexItem>\n\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tvalue={ parseInt( columnCount, 10 ) } // RangeControl can't deal with strings.\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\tcolumnCount: value,\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\tmax={ 16 }\n\t\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexItem>\n\t\t\t\t</Flex>\n\t\t\t</fieldset>\n\t\t\t{ allowSizingOnChildren &&\n\t\t\t\twindow.__experimentalEnableGridInteractivity && (\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t\t\t\t{ __( 'Rows' ) }\n\t\t\t\t\t\t</BaseControl.VisualLabel>\n\t\t\t\t\t\t<Flex gap={ 4 }>\n\t\t\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tsize={ '__unstable-large' }\n\t\t\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\t\t\trowCount: value,\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tvalue={ rowCount }\n\t\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Rows' ) }\n\t\t\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tvalue={ parseInt( rowCount, 10 ) } // RangeControl can't deal with strings.\n\t\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\t\t\trowCount: value,\n\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\t\tmax={ 16 }\n\t\t\t\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Rows' ) }\n\t\t\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</fieldset>\n\t\t\t\t) }\n\t\t</>\n\t);\n}\n\n// Enables switching between grid types\nfunction GridLayoutTypeControl( { layout, onChange } ) {\n\tconst { columnCount, minimumColumnWidth } = layout;\n\n\t/**\n\t * When switching, temporarily save any custom values set on the\n\t * previous type so we can switch back without loss.\n\t */\n\tconst [ tempColumnCount, setTempColumnCount ] = useState(\n\t\tcolumnCount || 3\n\t);\n\tconst [ tempMinimumColumnWidth, setTempMinimumColumnWidth ] = useState(\n\t\tminimumColumnWidth || '12rem'\n\t);\n\n\tconst isManual = !! columnCount ? 'manual' : 'auto';\n\n\tconst onChangeType = ( value ) => {\n\t\tif ( value === 'manual' ) {\n\t\t\tsetTempMinimumColumnWidth( minimumColumnWidth || '12rem' );\n\t\t} else {\n\t\t\tsetTempColumnCount( columnCount || 3 );\n\t\t}\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tcolumnCount: value === 'manual' ? tempColumnCount : null,\n\t\t\tminimumColumnWidth:\n\t\t\t\tvalue === 'auto' ? tempMinimumColumnWidth : null,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<ToggleGroupControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={ __( 'Type' ) }\n\t\t\tvalue={ isManual }\n\t\t\tonChange={ onChangeType }\n\t\t\tisBlock\n\t\t>\n\t\t\t<ToggleGroupControlOption\n\t\t\t\tkey={ 'auto' }\n\t\t\t\tvalue=\"auto\"\n\t\t\t\tlabel={ __( 'Auto' ) }\n\t\t\t/>\n\t\t\t<ToggleGroupControlOption\n\t\t\t\tkey={ 'manual' }\n\t\t\t\tvalue=\"manual\"\n\t\t\t\tlabel={ __( 'Manual' ) }\n\t\t\t/>\n\t\t</ToggleGroupControl>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}