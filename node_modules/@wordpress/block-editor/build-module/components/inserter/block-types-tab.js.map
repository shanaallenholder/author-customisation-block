{"version":3,"names":["__","_x","useMemo","useEffect","forwardRef","pipe","useAsyncList","BlockTypesList","InserterPanel","useBlockTypesState","InserterListbox","orderBy","InserterNoResults","getBlockNamespace","item","name","split","MAX_SUGGESTED_ITEMS","EMPTY_ARRAY","BlockTypesTab","rootClientId","onInsert","onHover","showMostUsedBlocks","ref","items","categories","collections","onSelectItem","suggestedItems","slice","uncategorizedItems","filter","category","itemsPerCategory","itemList","reduce","acc","push","itemsPerCollection","result","Object","keys","forEach","namespace","length","currentlyRenderedCategories","didRenderAllCategories","collectionEntries","entries","currentlyRenderedCollections","createElement","title","onSelect","label","map","categoryItems","slug","key","icon","className","collection","collectionItems"],"sources":["@wordpress/block-editor/src/components/inserter/block-types-tab.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { useMemo, useEffect, forwardRef } from '@wordpress/element';\nimport { pipe, useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport InserterPanel from './panel';\nimport useBlockTypesState from './hooks/use-block-types-state';\nimport InserterListbox from '../inserter-listbox';\nimport { orderBy } from '../../utils/sorting';\nimport InserterNoResults from './no-results';\n\nconst getBlockNamespace = ( item ) => item.name.split( '/' )[ 0 ];\n\nconst MAX_SUGGESTED_ITEMS = 6;\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation and rerendering the component.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\nexport function BlockTypesTab(\n\t{ rootClientId, onInsert, onHover, showMostUsedBlocks },\n\tref\n) {\n\tconst [ items, categories, collections, onSelectItem ] = useBlockTypesState(\n\t\trootClientId,\n\t\tonInsert\n\t);\n\n\tconst suggestedItems = useMemo( () => {\n\t\treturn orderBy( items, 'frecency', 'desc' ).slice(\n\t\t\t0,\n\t\t\tMAX_SUGGESTED_ITEMS\n\t\t);\n\t}, [ items ] );\n\n\tconst uncategorizedItems = useMemo( () => {\n\t\treturn items.filter( ( item ) => ! item.category );\n\t}, [ items ] );\n\n\tconst itemsPerCategory = useMemo( () => {\n\t\treturn pipe(\n\t\t\t( itemList ) =>\n\t\t\t\titemList.filter(\n\t\t\t\t\t( item ) => item.category && item.category !== 'reusable'\n\t\t\t\t),\n\t\t\t( itemList ) =>\n\t\t\t\titemList.reduce( ( acc, item ) => {\n\t\t\t\t\tconst { category } = item;\n\t\t\t\t\tif ( ! acc[ category ] ) {\n\t\t\t\t\t\tacc[ category ] = [];\n\t\t\t\t\t}\n\t\t\t\t\tacc[ category ].push( item );\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} )\n\t\t)( items );\n\t}, [ items ] );\n\n\tconst itemsPerCollection = useMemo( () => {\n\t\t// Create a new Object to avoid mutating collection.\n\t\tconst result = { ...collections };\n\t\tObject.keys( collections ).forEach( ( namespace ) => {\n\t\t\tresult[ namespace ] = items.filter(\n\t\t\t\t( item ) => getBlockNamespace( item ) === namespace\n\t\t\t);\n\t\t\tif ( result[ namespace ].length === 0 ) {\n\t\t\t\tdelete result[ namespace ];\n\t\t\t}\n\t\t} );\n\n\t\treturn result;\n\t}, [ items, collections ] );\n\n\t// Hide block preview on unmount.\n\tuseEffect( () => () => onHover( null ), [] );\n\n\t/**\n\t * The inserter contains a big number of blocks and opening it is a costful operation.\n\t * The rendering is the most costful part of it, in order to improve the responsiveness\n\t * of the \"opening\" action, these lazy lists allow us to render the inserter category per category,\n\t * once all the categories are rendered, we start rendering the collections and the uncategorized block types.\n\t */\n\tconst currentlyRenderedCategories = useAsyncList( categories );\n\tconst didRenderAllCategories =\n\t\tcategories.length === currentlyRenderedCategories.length;\n\n\t// Async List requires an array.\n\tconst collectionEntries = useMemo( () => {\n\t\treturn Object.entries( collections );\n\t}, [ collections ] );\n\tconst currentlyRenderedCollections = useAsyncList(\n\t\tdidRenderAllCategories ? collectionEntries : EMPTY_ARRAY\n\t);\n\n\tif ( ! items.length ) {\n\t\treturn <InserterNoResults />;\n\t}\n\n\treturn (\n\t\t<InserterListbox>\n\t\t\t<div ref={ ref }>\n\t\t\t\t{ showMostUsedBlocks && !! suggestedItems.length && (\n\t\t\t\t\t<InserterPanel title={ _x( 'Most used', 'blocks' ) }>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ suggestedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ _x( 'Most used', 'blocks' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t\t{ currentlyRenderedCategories.map( ( category ) => {\n\t\t\t\t\tconst categoryItems = itemsPerCategory[ category.slug ];\n\t\t\t\t\tif ( ! categoryItems || ! categoryItems.length ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\t\ticon={ category.icon }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\titems={ categoryItems }\n\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\tlabel={ category.title }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\n\t\t\t\t{ didRenderAllCategories && uncategorizedItems.length > 0 && (\n\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\tclassName=\"block-editor-inserter__uncategorized-blocks-panel\"\n\t\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ uncategorizedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ __( 'Uncategorized' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t\t{ currentlyRenderedCollections.map(\n\t\t\t\t\t( [ namespace, collection ] ) => {\n\t\t\t\t\t\tconst collectionItems = itemsPerCollection[ namespace ];\n\t\t\t\t\t\tif ( ! collectionItems || ! collectionItems.length ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\t\tkey={ namespace }\n\t\t\t\t\t\t\t\ttitle={ collection.title }\n\t\t\t\t\t\t\t\ticon={ collection.icon }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\t\titems={ collectionItems }\n\t\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\t\tlabel={ collection.title }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</InserterListbox>\n\t);\n}\n\nexport default forwardRef( BlockTypesTab );\n"],"mappings":"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","ignoreList":[]}