import { createElement } from "react";
/**
 * WordPress dependencies
 */
import { isRTL } from '@wordpress/i18n';
import { __experimentalHStack as HStack, FlexBlock, privateApis as componentsPrivateApis } from '@wordpress/components';
import { Icon, chevronRight, chevronLeft } from '@wordpress/icons';

/**
 * Internal dependencies
 */
import { unlock } from '../../../lock-unlock';
const {
  Tabs
} = unlock(componentsPrivateApis);
function CategoryTabs({
  categories,
  selectedCategory,
  onSelectCategory,
  children
}) {
  return createElement(Tabs, {
    className: "block-editor-inserter__category-tabs",
    selectOnMove: false,
    selectedTabId: selectedCategory ? selectedCategory.name : null,
    orientation: 'vertical',
    onSelect: categoryId => {
      // Pass the full category object
      onSelectCategory(categories.find(category => category.name === categoryId));
    }
  }, createElement(Tabs.TabList, {
    className: "block-editor-inserter__category-tablist"
  }, categories.map(category => createElement(Tabs.Tab, {
    key: category.name,
    tabId: category.name,
    className: "block-editor-inserter__category-tab",
    "aria-label": category.label,
    "aria-current": category === selectedCategory ? 'true' : undefined
  }, createElement(HStack, null, createElement(FlexBlock, null, category.label), createElement(Icon, {
    icon: isRTL() ? chevronLeft : chevronRight
  }))))), categories.map(category => createElement(Tabs.TabPanel, {
    key: category.name,
    tabId: category.name,
    focusable: false,
    className: "block-editor-inserter__category-panel"
  }, children)));
}
export default CategoryTabs;
//# sourceMappingURL=index.js.map