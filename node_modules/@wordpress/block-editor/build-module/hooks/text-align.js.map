{"version":3,"names":["clsx","__","getBlockSupport","hasBlockSupport","alignLeft","alignRight","alignCenter","AlignmentControl","BlockControls","useBlockEditingMode","cleanEmptyObject","shouldSkipSerialization","TYPOGRAPHY_SUPPORT_KEY","TEXT_ALIGN_SUPPORT_KEY","TEXT_ALIGNMENT_OPTIONS","icon","title","align","VALID_TEXT_ALIGNMENTS","getValidTextAlignments","blockTextAlign","validTextAlignments","Array","isArray","filter","textAlign","includes","BlockEditTextAlignmentToolbarControlsPure","style","name","blockName","setAttributes","blockEditingMode","length","textAlignmentControls","control","onChange","newTextAlignValue","newStyle","typography","createElement","group","value","alignmentControls","edit","useBlockProps","addSaveProps","addAssignedTextAlign","attributeKeys","hasSupport","className","props","blockType","attributes","isTextAlignValid"],"sources":["@wordpress/block-editor/src/hooks/text-align.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { getBlockSupport, hasBlockSupport } from '@wordpress/blocks';\nimport { alignLeft, alignRight, alignCenter } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { AlignmentControl, BlockControls } from '../components';\nimport { useBlockEditingMode } from '../components/block-editing-mode';\nimport { cleanEmptyObject, shouldSkipSerialization } from './utils';\nimport { TYPOGRAPHY_SUPPORT_KEY } from './typography';\n\nexport const TEXT_ALIGN_SUPPORT_KEY = 'typography.textAlign';\n\nconst TEXT_ALIGNMENT_OPTIONS = [\n\t{\n\t\ticon: alignLeft,\n\t\ttitle: __( 'Align text left' ),\n\t\talign: 'left',\n\t},\n\t{\n\t\ticon: alignCenter,\n\t\ttitle: __( 'Align text center' ),\n\t\talign: 'center',\n\t},\n\t{\n\t\ticon: alignRight,\n\t\ttitle: __( 'Align text right' ),\n\t\talign: 'right',\n\t},\n];\n\nconst VALID_TEXT_ALIGNMENTS = [ 'left', 'center', 'right' ];\n\n/**\n * Returns the valid text alignments.\n * Takes into consideration the text aligns supported by a block.\n * Exported just for testing purposes, not exported outside the module.\n *\n * @param {?boolean|string[]} blockTextAlign Text aligns supported by the block.\n *\n * @return {string[]} Valid text alignments.\n */\nexport function getValidTextAlignments( blockTextAlign ) {\n\tlet validTextAlignments;\n\tif ( Array.isArray( blockTextAlign ) ) {\n\t\tvalidTextAlignments = VALID_TEXT_ALIGNMENTS.filter( ( textAlign ) =>\n\t\t\tblockTextAlign.includes( textAlign )\n\t\t);\n\t} else if ( blockTextAlign === true ) {\n\t\t// `true` includes all alignments...\n\t\tvalidTextAlignments = [ ...VALID_TEXT_ALIGNMENTS ];\n\t} else {\n\t\tvalidTextAlignments = [];\n\t}\n\n\treturn validTextAlignments;\n}\n\nfunction BlockEditTextAlignmentToolbarControlsPure( {\n\tstyle,\n\tname: blockName,\n\tsetAttributes,\n} ) {\n\tconst validTextAlignments = getValidTextAlignments(\n\t\tgetBlockSupport( blockName, TEXT_ALIGN_SUPPORT_KEY )\n\t);\n\tconst blockEditingMode = useBlockEditingMode();\n\tif ( ! validTextAlignments.length || blockEditingMode !== 'default' ) {\n\t\treturn null;\n\t}\n\n\tconst textAlignmentControls = TEXT_ALIGNMENT_OPTIONS.filter( ( control ) =>\n\t\tvalidTextAlignments.includes( control.align )\n\t);\n\n\tconst onChange = ( newTextAlignValue ) => {\n\t\tconst newStyle = {\n\t\t\t...style,\n\t\t\ttypography: {\n\t\t\t\t...style?.typography,\n\t\t\t\ttextAlign: newTextAlignValue,\n\t\t\t},\n\t\t};\n\n\t\tsetAttributes( { style: cleanEmptyObject( newStyle ) } );\n\t};\n\n\treturn (\n\t\t<BlockControls group=\"block\">\n\t\t\t<AlignmentControl\n\t\t\t\tvalue={ style?.typography?.textAlign }\n\t\t\t\tonChange={ onChange }\n\t\t\t\talignmentControls={ textAlignmentControls }\n\t\t\t/>\n\t\t</BlockControls>\n\t);\n}\n\nexport default {\n\tedit: BlockEditTextAlignmentToolbarControlsPure,\n\tuseBlockProps,\n\taddSaveProps: addAssignedTextAlign,\n\tattributeKeys: [ 'style' ],\n\thasSupport( name ) {\n\t\treturn hasBlockSupport( name, TEXT_ALIGN_SUPPORT_KEY, false );\n\t},\n};\n\nfunction useBlockProps( { name, style } ) {\n\tif ( ! style?.typography?.textAlign ) {\n\t\treturn null;\n\t}\n\n\tconst validTextAlignments = getValidTextAlignments(\n\t\tgetBlockSupport( name, TEXT_ALIGN_SUPPORT_KEY )\n\t);\n\n\tif ( ! validTextAlignments.length ) {\n\t\treturn null;\n\t}\n\n\tif (\n\t\tshouldSkipSerialization( name, TYPOGRAPHY_SUPPORT_KEY, 'textAlign' )\n\t) {\n\t\treturn null;\n\t}\n\n\tconst textAlign = style.typography.textAlign;\n\n\tconst className = clsx( {\n\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t} );\n\treturn { className };\n}\n\n/**\n * Override props assigned to save component to inject text alignment class\n * name if block supports it.\n *\n * @param {Object} props      Additional props applied to save element.\n * @param {Object} blockType  Block type.\n * @param {Object} attributes Block attributes.\n *\n * @return {Object} Filtered props applied to save element.\n */\nexport function addAssignedTextAlign( props, blockType, attributes ) {\n\tif ( ! attributes?.style?.typography?.textAlign ) {\n\t\treturn props;\n\t}\n\n\tconst { textAlign } = attributes.style.typography;\n\tconst blockTextAlign = getBlockSupport( blockType, TEXT_ALIGN_SUPPORT_KEY );\n\tconst isTextAlignValid =\n\t\tgetValidTextAlignments( blockTextAlign ).includes( textAlign );\n\tif (\n\t\tisTextAlignValid &&\n\t\t! shouldSkipSerialization(\n\t\t\tblockType,\n\t\t\tTYPOGRAPHY_SUPPORT_KEY,\n\t\t\t'textAlign'\n\t\t)\n\t) {\n\t\tprops.className = clsx(\n\t\t\t`has-text-align-${ textAlign }`,\n\t\t\tprops.className\n\t\t);\n\t}\n\treturn props;\n}\n"],"mappings":"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","ignoreList":[]}