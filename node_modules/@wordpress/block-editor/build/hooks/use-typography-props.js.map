{"version":3,"names":["_clsx","_interopRequireDefault","require","_components","_style","_fontSizes","_typographyUtils","_lockUnlock","getTypographyClassesAndStyles","attributes","settings","kebabCase","unlock","componentsPrivateApis","typographyStyles","style","typography","fontSize","getTypographyFontSizeValue","size","getInlineStyles","fontFamilyClassName","fontFamily","textAlignClassName","textAlign","className","clsx","getFontSizeClass"],"sources":["@wordpress/block-editor/src/hooks/use-typography-props.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { privateApis as componentsPrivateApis } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { getInlineStyles } from './style';\nimport { getFontSizeClass } from '../components/font-sizes';\nimport { getTypographyFontSizeValue } from '../components/global-styles/typography-utils';\nimport { unlock } from '../lock-unlock';\n\n/*\n * This utility is intended to assist where the serialization of the typography\n * block support is being skipped for a block but the typography related CSS\n * styles still need to be generated so they can be applied to inner elements.\n */\n/**\n * Provides the CSS class names and inline styles for a block's typography support\n * attributes.\n *\n * @param {Object}         attributes Block attributes.\n * @param {Object|boolean} settings   Merged theme.json settings\n *\n * @return {Object} Typography block support derived CSS classes & styles.\n */\nexport function getTypographyClassesAndStyles( attributes, settings ) {\n\tconst { kebabCase } = unlock( componentsPrivateApis );\n\tlet typographyStyles = attributes?.style?.typography || {};\n\ttypographyStyles = {\n\t\t...typographyStyles,\n\t\tfontSize: getTypographyFontSizeValue(\n\t\t\t{ size: attributes?.style?.typography?.fontSize },\n\t\t\tsettings\n\t\t),\n\t};\n\n\tconst style = getInlineStyles( { typography: typographyStyles } );\n\tconst fontFamilyClassName = !! attributes?.fontFamily\n\t\t? `has-${ kebabCase( attributes.fontFamily ) }-font-family`\n\t\t: '';\n\tconst textAlignClassName = !! attributes?.style?.typography?.textAlign\n\t\t? `has-text-align-${ attributes?.style?.typography?.textAlign }`\n\t\t: '';\n\tconst className = clsx(\n\t\tfontFamilyClassName,\n\t\ttextAlignClassName,\n\t\tgetFontSizeClass( attributes?.fontSize )\n\t);\n\n\treturn {\n\t\tclassName,\n\t\tstyle,\n\t};\n}\n"],"mappings":";;;;;;;AAGA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAKA,IAAAC,WAAA,GAAAD,OAAA;AAKA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,gBAAA,GAAAJ,OAAA;AACA,IAAAK,WAAA,GAAAL,OAAA;AAhBA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASM,6BAA6BA,CAAEC,UAAU,EAAEC,QAAQ,EAAG;EACrE,MAAM;IAAEC;EAAU,CAAC,GAAG,IAAAC,kBAAM,EAAEC,uBAAsB,CAAC;EACrD,IAAIC,gBAAgB,GAAGL,UAAU,EAAEM,KAAK,EAAEC,UAAU,IAAI,CAAC,CAAC;EAC1DF,gBAAgB,GAAG;IAClB,GAAGA,gBAAgB;IACnBG,QAAQ,EAAE,IAAAC,2CAA0B,EACnC;MAAEC,IAAI,EAAEV,UAAU,EAAEM,KAAK,EAAEC,UAAU,EAAEC;IAAS,CAAC,EACjDP,QACD;EACD,CAAC;EAED,MAAMK,KAAK,GAAG,IAAAK,sBAAe,EAAE;IAAEJ,UAAU,EAAEF;EAAiB,CAAE,CAAC;EACjE,MAAMO,mBAAmB,GAAG,CAAC,CAAEZ,UAAU,EAAEa,UAAU,GACjD,OAAOX,SAAS,CAAEF,UAAU,CAACa,UAAW,CAAG,cAAa,GACzD,EAAE;EACL,MAAMC,kBAAkB,GAAG,CAAC,CAAEd,UAAU,EAAEM,KAAK,EAAEC,UAAU,EAAEQ,SAAS,GAClE,kBAAkBf,UAAU,EAAEM,KAAK,EAAEC,UAAU,EAAEQ,SAAW,EAAC,GAC9D,EAAE;EACL,MAAMC,SAAS,GAAG,IAAAC,aAAI,EACrBL,mBAAmB,EACnBE,kBAAkB,EAClB,IAAAI,2BAAgB,EAAElB,UAAU,EAAEQ,QAAS,CACxC,CAAC;EAED,OAAO;IACNQ,SAAS;IACTV;EACD,CAAC;AACF","ignoreList":[]}