"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _element = require("@wordpress/element");
var _compose = require("@wordpress/compose");
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
var _data = require("@wordpress/data");
var _blockPatternsExplorer = _interopRequireDefault(require("../block-patterns-explorer"));
var _mobileTabNavigation = _interopRequireDefault(require("../mobile-tab-navigation"));
var _patternCategoryPreviews = require("./pattern-category-previews");
var _usePatternCategories = require("./use-pattern-categories");
var _categoryTabs = _interopRequireDefault(require("../category-tabs"));
var _noResults = _interopRequireDefault(require("../no-results"));
var _store = require("../../../store");
var _lockUnlock = require("../../../lock-unlock");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function BlockPatternsTab({
  onSelectCategory,
  selectedCategory,
  onInsert,
  rootClientId,
  children
}) {
  const [showPatternsExplorer, setShowPatternsExplorer] = (0, _element.useState)(false);
  const categories = (0, _usePatternCategories.usePatternCategories)(rootClientId);
  const isMobile = (0, _compose.useViewportMatch)('medium', '<');
  const isResolvingPatterns = (0, _data.useSelect)(select => (0, _lockUnlock.unlock)(select(_store.store)).isResolvingPatterns(), []);
  if (isResolvingPatterns) {
    return (0, _react.createElement)("div", {
      className: "block-editor-inserter__patterns-loading"
    }, (0, _react.createElement)(_components.Spinner, null));
  }
  if (!categories.length) {
    return (0, _react.createElement)(_noResults.default, null);
  }
  return (0, _react.createElement)(_react.Fragment, null, !isMobile && (0, _react.createElement)("div", {
    className: "block-editor-inserter__block-patterns-tabs-container"
  }, (0, _react.createElement)(_categoryTabs.default, {
    categories: categories,
    selectedCategory: selectedCategory,
    onSelectCategory: onSelectCategory
  }, children), (0, _react.createElement)(_components.Button, {
    className: "block-editor-inserter__patterns-explore-button",
    onClick: () => setShowPatternsExplorer(true),
    variant: "secondary"
  }, (0, _i18n.__)('Explore all patterns'))), isMobile && (0, _react.createElement)(_mobileTabNavigation.default, {
    categories: categories
  }, category => (0, _react.createElement)("div", {
    className: "block-editor-inserter__category-panel"
  }, (0, _react.createElement)(_patternCategoryPreviews.PatternCategoryPreviews, {
    key: category.name,
    onInsert: onInsert,
    rootClientId: rootClientId,
    category: category,
    showTitlesAsTooltip: false
  }))), showPatternsExplorer && (0, _react.createElement)(_blockPatternsExplorer.default, {
    initialCategory: selectedCategory || categories[0],
    patternCategories: categories,
    onModalClose: () => setShowPatternsExplorer(false),
    rootClientId: rootClientId
  }));
}
var _default = exports.default = BlockPatternsTab;
//# sourceMappingURL=index.js.map