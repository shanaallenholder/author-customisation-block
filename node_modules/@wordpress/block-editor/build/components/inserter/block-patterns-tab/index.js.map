{"version":3,"names":["_element","require","_compose","_components","_i18n","_data","_blockPatternsExplorer","_interopRequireDefault","_mobileTabNavigation","_patternCategoryPreviews","_usePatternCategories","_categoryTabs","_noResults","_store","_lockUnlock","BlockPatternsTab","onSelectCategory","selectedCategory","onInsert","rootClientId","children","showPatternsExplorer","setShowPatternsExplorer","useState","categories","usePatternCategories","isMobile","useViewportMatch","isResolvingPatterns","useSelect","select","unlock","blockEditorStore","_react","createElement","className","Spinner","length","default","Fragment","Button","onClick","variant","__","category","PatternCategoryPreviews","key","name","showTitlesAsTooltip","initialCategory","patternCategories","onModalClose","_default","exports"],"sources":["@wordpress/block-editor/src/components/inserter/block-patterns-tab/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { Button, Spinner } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PatternsExplorerModal from '../block-patterns-explorer';\nimport MobileTabNavigation from '../mobile-tab-navigation';\nimport { PatternCategoryPreviews } from './pattern-category-previews';\nimport { usePatternCategories } from './use-pattern-categories';\nimport CategoryTabs from '../category-tabs';\nimport InserterNoResults from '../no-results';\nimport { store as blockEditorStore } from '../../../store';\nimport { unlock } from '../../../lock-unlock';\n\nfunction BlockPatternsTab( {\n\tonSelectCategory,\n\tselectedCategory,\n\tonInsert,\n\trootClientId,\n\tchildren,\n} ) {\n\tconst [ showPatternsExplorer, setShowPatternsExplorer ] = useState( false );\n\n\tconst categories = usePatternCategories( rootClientId );\n\n\tconst isMobile = useViewportMatch( 'medium', '<' );\n\tconst isResolvingPatterns = useSelect(\n\t\t( select ) =>\n\t\t\tunlock( select( blockEditorStore ) ).isResolvingPatterns(),\n\t\t[]\n\t);\n\n\tif ( isResolvingPatterns ) {\n\t\treturn (\n\t\t\t<div className=\"block-editor-inserter__patterns-loading\">\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif ( ! categories.length ) {\n\t\treturn <InserterNoResults />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ ! isMobile && (\n\t\t\t\t<div className=\"block-editor-inserter__block-patterns-tabs-container\">\n\t\t\t\t\t<CategoryTabs\n\t\t\t\t\t\tcategories={ categories }\n\t\t\t\t\t\tselectedCategory={ selectedCategory }\n\t\t\t\t\t\tonSelectCategory={ onSelectCategory }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</CategoryTabs>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"block-editor-inserter__patterns-explore-button\"\n\t\t\t\t\t\tonClick={ () => setShowPatternsExplorer( true ) }\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Explore all patterns' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t{ isMobile && (\n\t\t\t\t<MobileTabNavigation categories={ categories }>\n\t\t\t\t\t{ ( category ) => (\n\t\t\t\t\t\t<div className=\"block-editor-inserter__category-panel\">\n\t\t\t\t\t\t\t<PatternCategoryPreviews\n\t\t\t\t\t\t\t\tkey={ category.name }\n\t\t\t\t\t\t\t\tonInsert={ onInsert }\n\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t\tcategory={ category }\n\t\t\t\t\t\t\t\tshowTitlesAsTooltip={ false }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t</MobileTabNavigation>\n\t\t\t) }\n\t\t\t{ showPatternsExplorer && (\n\t\t\t\t<PatternsExplorerModal\n\t\t\t\t\tinitialCategory={ selectedCategory || categories[ 0 ] }\n\t\t\t\t\tpatternCategories={ categories }\n\t\t\t\t\tonModalClose={ () => setShowPatternsExplorer( false ) }\n\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default BlockPatternsTab;\n"],"mappings":"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","ignoreList":[]}