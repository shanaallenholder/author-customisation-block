{"version":3,"names":["_data","require","_blocks","_i18n","_a11y","_element","_store","_lockUnlock","useInsertionPoint","rootClientId","insertionIndex","clientId","isAppender","onSelect","shouldFocusBlock","selectBlockOnInsert","getSelectedBlock","useSelect","blockEditorStore","destinationRootClientId","destinationIndex","select","getSelectedBlockClientId","getBlockRootClientId","getBlockIndex","getBlockOrder","selectedBlockClientId","_destinationRootClientId","_destinationIndex","undefined","length","replaceBlocks","insertBlocks","showInsertionPoint","hideInsertionPoint","setLastFocus","unlock","useDispatch","onInsertBlocks","useCallback","blocks","meta","shouldForceFocusBlock","selectedBlock","isUnmodifiedDefaultBlock","blockLength","Array","isArray","message","sprintf","_n","speak","onToggleInsertionPoint","show","_default","exports","default"],"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-insertion-point.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { isUnmodifiedDefaultBlock } from '@wordpress/blocks';\nimport { _n, sprintf } from '@wordpress/i18n';\nimport { speak } from '@wordpress/a11y';\nimport { useCallback } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../../store';\nimport { unlock } from '../../../lock-unlock';\n\n/**\n * @typedef WPInserterConfig\n *\n * @property {string=}   rootClientId   If set, insertion will be into the\n *                                      block with this ID.\n * @property {number=}   insertionIndex If set, insertion will be into this\n *                                      explicit position.\n * @property {string=}   clientId       If set, insertion will be after the\n *                                      block with this ID.\n * @property {boolean=}  isAppender     Whether the inserter is an appender\n *                                      or not.\n * @property {Function=} onSelect       Called after insertion.\n */\n\n/**\n * Returns the insertion point state given the inserter config.\n *\n * @param {WPInserterConfig} config Inserter Config.\n * @return {Array} Insertion Point State (rootClientID, onInsertBlocks and onToggle).\n */\nfunction useInsertionPoint( {\n\trootClientId = '',\n\tinsertionIndex,\n\tclientId,\n\tisAppender,\n\tonSelect,\n\tshouldFocusBlock = true,\n\tselectBlockOnInsert = true,\n} ) {\n\tconst { getSelectedBlock } = useSelect( blockEditorStore );\n\tconst { destinationRootClientId, destinationIndex } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetSelectedBlockClientId,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockIndex,\n\t\t\t\tgetBlockOrder,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\n\t\t\tlet _destinationRootClientId = rootClientId;\n\t\t\tlet _destinationIndex;\n\n\t\t\tif ( insertionIndex !== undefined ) {\n\t\t\t\t// Insert into a specific index.\n\t\t\t\t_destinationIndex = insertionIndex;\n\t\t\t} else if ( clientId ) {\n\t\t\t\t// Insert after a specific client ID.\n\t\t\t\t_destinationIndex = getBlockIndex( clientId );\n\t\t\t} else if ( ! isAppender && selectedBlockClientId ) {\n\t\t\t\t_destinationRootClientId = getBlockRootClientId(\n\t\t\t\t\tselectedBlockClientId\n\t\t\t\t);\n\t\t\t\t_destinationIndex = getBlockIndex( selectedBlockClientId ) + 1;\n\t\t\t} else {\n\t\t\t\t// Insert at the end of the list.\n\t\t\t\t_destinationIndex = getBlockOrder(\n\t\t\t\t\t_destinationRootClientId\n\t\t\t\t).length;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdestinationRootClientId: _destinationRootClientId,\n\t\t\t\tdestinationIndex: _destinationIndex,\n\t\t\t};\n\t\t},\n\t\t[ rootClientId, insertionIndex, clientId, isAppender ]\n\t);\n\n\tconst {\n\t\treplaceBlocks,\n\t\tinsertBlocks,\n\t\tshowInsertionPoint,\n\t\thideInsertionPoint,\n\t\tsetLastFocus,\n\t} = unlock( useDispatch( blockEditorStore ) );\n\n\tconst onInsertBlocks = useCallback(\n\t\t( blocks, meta, shouldForceFocusBlock = false ) => {\n\t\t\t// When we are trying to move focus or select a new block on insert, we also\n\t\t\t// need to clear the last focus to avoid the focus being set to the wrong block\n\t\t\t// when tabbing back into the canvas if the block was added from outside the\n\t\t\t// editor canvas.\n\t\t\tif (\n\t\t\t\tshouldForceFocusBlock ||\n\t\t\t\tshouldFocusBlock ||\n\t\t\t\tselectBlockOnInsert\n\t\t\t) {\n\t\t\t\tsetLastFocus( null );\n\t\t\t}\n\n\t\t\tconst selectedBlock = getSelectedBlock();\n\n\t\t\tif (\n\t\t\t\t! isAppender &&\n\t\t\t\tselectedBlock &&\n\t\t\t\tisUnmodifiedDefaultBlock( selectedBlock )\n\t\t\t) {\n\t\t\t\treplaceBlocks(\n\t\t\t\t\tselectedBlock.clientId,\n\t\t\t\t\tblocks,\n\t\t\t\t\tnull,\n\t\t\t\t\tshouldFocusBlock || shouldForceFocusBlock ? 0 : null,\n\t\t\t\t\tmeta\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tinsertBlocks(\n\t\t\t\t\tblocks,\n\t\t\t\t\tdestinationIndex,\n\t\t\t\t\tdestinationRootClientId,\n\t\t\t\t\tselectBlockOnInsert,\n\t\t\t\t\tshouldFocusBlock || shouldForceFocusBlock ? 0 : null,\n\t\t\t\t\tmeta\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst blockLength = Array.isArray( blocks ) ? blocks.length : 1;\n\t\t\tconst message = sprintf(\n\t\t\t\t// translators: %d: the name of the block that has been added\n\t\t\t\t_n( '%d block added.', '%d blocks added.', blockLength ),\n\t\t\t\tblockLength\n\t\t\t);\n\t\t\tspeak( message );\n\n\t\t\tif ( onSelect ) {\n\t\t\t\tonSelect( blocks );\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tisAppender,\n\t\t\tgetSelectedBlock,\n\t\t\treplaceBlocks,\n\t\t\tinsertBlocks,\n\t\t\tdestinationRootClientId,\n\t\t\tdestinationIndex,\n\t\t\tonSelect,\n\t\t\tshouldFocusBlock,\n\t\t\tselectBlockOnInsert,\n\t\t]\n\t);\n\n\tconst onToggleInsertionPoint = useCallback(\n\t\t( show ) => {\n\t\t\tif ( show ) {\n\t\t\t\tshowInsertionPoint( destinationRootClientId, destinationIndex );\n\t\t\t} else {\n\t\t\t\thideInsertionPoint();\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tshowInsertionPoint,\n\t\t\thideInsertionPoint,\n\t\t\tdestinationRootClientId,\n\t\t\tdestinationIndex,\n\t\t]\n\t);\n\n\treturn [ destinationRootClientId, onInsertBlocks, onToggleInsertionPoint ];\n}\n\nexport default useInsertionPoint;\n"],"mappings":";;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,KAAA,GAAAH,OAAA;AACA,IAAAI,QAAA,GAAAJ,OAAA;AAKA,IAAAK,MAAA,GAAAL,OAAA;AACA,IAAAM,WAAA,GAAAN,OAAA;AAbA;AACA;AACA;;AAOA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,iBAAiBA,CAAE;EAC3BC,YAAY,GAAG,EAAE;EACjBC,cAAc;EACdC,QAAQ;EACRC,UAAU;EACVC,QAAQ;EACRC,gBAAgB,GAAG,IAAI;EACvBC,mBAAmB,GAAG;AACvB,CAAC,EAAG;EACH,MAAM;IAAEC;EAAiB,CAAC,GAAG,IAAAC,eAAS,EAAEC,YAAiB,CAAC;EAC1D,MAAM;IAAEC,uBAAuB;IAAEC;EAAiB,CAAC,GAAG,IAAAH,eAAS,EAC5DI,MAAM,IAAM;IACb,MAAM;MACLC,wBAAwB;MACxBC,oBAAoB;MACpBC,aAAa;MACbC;IACD,CAAC,GAAGJ,MAAM,CAAEH,YAAiB,CAAC;IAC9B,MAAMQ,qBAAqB,GAAGJ,wBAAwB,CAAC,CAAC;IAExD,IAAIK,wBAAwB,GAAGlB,YAAY;IAC3C,IAAImB,iBAAiB;IAErB,IAAKlB,cAAc,KAAKmB,SAAS,EAAG;MACnC;MACAD,iBAAiB,GAAGlB,cAAc;IACnC,CAAC,MAAM,IAAKC,QAAQ,EAAG;MACtB;MACAiB,iBAAiB,GAAGJ,aAAa,CAAEb,QAAS,CAAC;IAC9C,CAAC,MAAM,IAAK,CAAEC,UAAU,IAAIc,qBAAqB,EAAG;MACnDC,wBAAwB,GAAGJ,oBAAoB,CAC9CG,qBACD,CAAC;MACDE,iBAAiB,GAAGJ,aAAa,CAAEE,qBAAsB,CAAC,GAAG,CAAC;IAC/D,CAAC,MAAM;MACN;MACAE,iBAAiB,GAAGH,aAAa,CAChCE,wBACD,CAAC,CAACG,MAAM;IACT;IAEA,OAAO;MACNX,uBAAuB,EAAEQ,wBAAwB;MACjDP,gBAAgB,EAAEQ;IACnB,CAAC;EACF,CAAC,EACD,CAAEnB,YAAY,EAAEC,cAAc,EAAEC,QAAQ,EAAEC,UAAU,CACrD,CAAC;EAED,MAAM;IACLmB,aAAa;IACbC,YAAY;IACZC,kBAAkB;IAClBC,kBAAkB;IAClBC;EACD,CAAC,GAAG,IAAAC,kBAAM,EAAE,IAAAC,iBAAW,EAAEnB,YAAiB,CAAE,CAAC;EAE7C,MAAMoB,cAAc,GAAG,IAAAC,oBAAW,EACjC,CAAEC,MAAM,EAAEC,IAAI,EAAEC,qBAAqB,GAAG,KAAK,KAAM;IAClD;IACA;IACA;IACA;IACA,IACCA,qBAAqB,IACrB5B,gBAAgB,IAChBC,mBAAmB,EAClB;MACDoB,YAAY,CAAE,IAAK,CAAC;IACrB;IAEA,MAAMQ,aAAa,GAAG3B,gBAAgB,CAAC,CAAC;IAExC,IACC,CAAEJ,UAAU,IACZ+B,aAAa,IACb,IAAAC,gCAAwB,EAAED,aAAc,CAAC,EACxC;MACDZ,aAAa,CACZY,aAAa,CAAChC,QAAQ,EACtB6B,MAAM,EACN,IAAI,EACJ1B,gBAAgB,IAAI4B,qBAAqB,GAAG,CAAC,GAAG,IAAI,EACpDD,IACD,CAAC;IACF,CAAC,MAAM;MACNT,YAAY,CACXQ,MAAM,EACNpB,gBAAgB,EAChBD,uBAAuB,EACvBJ,mBAAmB,EACnBD,gBAAgB,IAAI4B,qBAAqB,GAAG,CAAC,GAAG,IAAI,EACpDD,IACD,CAAC;IACF;IACA,MAAMI,WAAW,GAAGC,KAAK,CAACC,OAAO,CAAEP,MAAO,CAAC,GAAGA,MAAM,CAACV,MAAM,GAAG,CAAC;IAC/D,MAAMkB,OAAO,GAAG,IAAAC,aAAO;IACtB;IACA,IAAAC,QAAE,EAAE,iBAAiB,EAAE,kBAAkB,EAAEL,WAAY,CAAC,EACxDA,WACD,CAAC;IACD,IAAAM,WAAK,EAAEH,OAAQ,CAAC;IAEhB,IAAKnC,QAAQ,EAAG;MACfA,QAAQ,CAAE2B,MAAO,CAAC;IACnB;EACD,CAAC,EACD,CACC5B,UAAU,EACVI,gBAAgB,EAChBe,aAAa,EACbC,YAAY,EACZb,uBAAuB,EACvBC,gBAAgB,EAChBP,QAAQ,EACRC,gBAAgB,EAChBC,mBAAmB,CAErB,CAAC;EAED,MAAMqC,sBAAsB,GAAG,IAAAb,oBAAW,EACvCc,IAAI,IAAM;IACX,IAAKA,IAAI,EAAG;MACXpB,kBAAkB,CAAEd,uBAAuB,EAAEC,gBAAiB,CAAC;IAChE,CAAC,MAAM;MACNc,kBAAkB,CAAC,CAAC;IACrB;EACD,CAAC,EACD,CACCD,kBAAkB,EAClBC,kBAAkB,EAClBf,uBAAuB,EACvBC,gBAAgB,CAElB,CAAC;EAED,OAAO,CAAED,uBAAuB,EAAEmB,cAAc,EAAEc,sBAAsB,CAAE;AAC3E;AAAC,IAAAE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEchD,iBAAiB","ignoreList":[]}